[ open list ]
dragon.list.open(increase !dragon.cell)(list !dragon.list) = {
    [ allocate buffer ]
    dragon.buffer.request(increase)(list:allocation)

    [ setup list data ]
    dragon.copy(dragon.constant.0)(list:length)
    dragon.copy(increase)(list:increase)
    dragon.copy(dragon.constant.0)(list:append_count)
}

[ close list ]
dragon.list.close(list !dragon.list)() = {
    [ deallocate buffer ]
    dragon.buffer.return(list:allocation)()
}

[ calculate content buffer ]
dragon.list.calculate.content_buffer(list !dragon.list)(content_buffer !dragon.buffer) = {
    [ calculate content buffer ]
    dragon.copy(list:allocation:start)(content_buffer:start)
    dragon.buffer.calculate.end_address(content_buffer:start, list:length)(content_buffer:end)
}
